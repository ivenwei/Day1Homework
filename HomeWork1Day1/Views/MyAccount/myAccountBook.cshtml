@model HomeWork1Day1.Models.ViewModels.MyAccountViewModels

@{
    Layout = "~/Views/Shared/_MyAccount.cshtml";
}


@using (Ajax.BeginForm(new AjaxOptions
{
    UpdateTargetId = "ajax",
    Confirm = "Are you sure??",
    LoadingElementDuration = 2000,
    LoadingElementId = "ajaxProcessing",
    Url = Url.Action("ajaxPostAccount")
}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    IEnumerable<SelectListItem> cate = ViewData["myAccountCategory"] as IEnumerable<SelectListItem>;
                }
                @Html.DropDownListFor(model => model.category, cate)
                @*@Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.myMoney, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.myMoney, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.myMoney, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.memo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.memo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.memo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crate" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="ajaxProcessing" style="display:none">
    <i class="fa fa-spinner fa-spin fa-3x fa-fw"></i>
    <span class="sr-only">Loading...</span>
</div>


<div id="ajax">
    @{ 
        ///請問使用ChildAction也可以完成一樣的功能嗎?
        ///@Html.Action("myAccountBookChildAction")
    }
    @Html.Partial("_ajaxPostAccount", ViewData["myAccountList"] as IPagedList<HomeWork1Day1.Models.ViewModels.MyAccountViewModels>)
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
}